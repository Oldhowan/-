#include <iostream>
#include <string>
using namespace std;
#define Max 1000


//设计联系人的结构体：
struct Person
{
	//姓名：
	string m_Name;
	//性别 1、男 2、女
	int m_Sex;
	//年龄
	int m_Age;
	//电话
	string m_Phone;
	//住址
	string m_Address;
};


//设计通讯录的结构体：
struct Addressbooks
{
	//通讯录中保存的联系人数组
	struct Person personArray[Max];

	//通讯录中当前记录联系人个数
	int m_Size;
};


//添加联系人：
void addPerson(Addressbooks *abs)
{
	//判断通讯录是否已满，如果满了就不再添加；
	if (abs->m_Size == Max)
	{
		cout << "通讯录已满，无法添加！" << endl;
		return;
	}
	else{
		//添加具体的联系人
		//姓名
		string name;
		cout << "请输入姓名： " << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;//数组存储姓名；
		//性别
		cout << "请输入性别： "<< endl;
		cout << "1->男"<<endl;
		cout << "2->女" << endl;
		int sex = 0;
		while (true){
			cin >> sex;
			if (sex == 1 || sex == 2){
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入！" << endl;
		}
		//年龄
		int age;
		cout << "请输入年龄：" << endl;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;
		cout << "" << endl;
		//电话
		string phone;
		cout << "请输入联系电话：" << endl;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;
		//地址
		string address;
		cout << "请输入地址：" << endl;
		cin >> address;
		abs->personArray[abs->m_Size].m_Address = address;

		//更新通讯录人数
		abs->m_Size++;
		cout << "添加成功！" << endl;
		system("pause");//请按任意键继续；
		system("cls");
	}
}

//2、显示所有联系人
void showPerson(Addressbooks *abs)
{
	//判断通讯录中人数是否为0，如果为0.提示为空
	//如果不问0，显示记录的联系人信息；
	if (abs->m_Size==0){
		cout << "当前记录为空！" << endl;
	}
	else{
		//遍历
		for (int i = 0; i < abs->m_Size; i++){
			cout << "姓名：" << abs->personArray[i].m_Name << "\t";
			cout << "性别：" << (abs->personArray[i].m_Sex ==1?"男":"女")<< "\t";
			cout << "年龄: " << abs->personArray[i].m_Age << "\t";
			cout << "电话: " << abs->personArray[i].m_Phone << "\t";
			cout << "住址: " << abs->personArray[i].m_Address<< endl;
		}
	}
	system("pause");//按任意键继续
	system("cls");
}

//3、删除联系人

//检测联系人是否存在，如果存在，返回联系人所在数组中的具体位置，不存在返回-1
//参数1 通讯录 参数2 对比姓名
int isExist(Addressbooks *abs, string name){
	for (int i = 0; i < abs->m_Size; i++){
		if (abs->personArray[i].m_Name == name){
			return i;//找到了；
		}
	}
	return  - 1;//如果便利结束都没有找到，就返回-1
}
//3、删除指定的联系人
//要删除某人，则要将那人后面的人向前一地哦那个，并且将通讯录中记录的人员个数做一个-1的操作
void deletePerson(Addressbooks *abs){
	cout << "请输入想要删除的联系人：" << endl;
	string name;
	cin >> name;
	int ret=isExist(abs, name);
	//ret==-1
	//未查到此人
	//ret！=-1  查到了
	if (ret!=-1){
		//查到此人，进行删除操作
		for (int i = ret; i < abs->m_Size; i++){
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;//更新通讯录中的人员数
		cout << " 删除成功" << endl;
	}
	else
	{
		cout << "查无此人！" << endl;
	}
	system("pause");
	system("cls");
}

//4、查找联系人：
void findPerson(Addressbooks *abs){
	cout << "请输入查找的联系人：" << endl;
	string name;
	cin >> name;
	//判断指定的联系人是否存在通讯录中
	int ret = isExist(abs, name);
	if (ret != -1){
		//找到了
		cout << "找到了" << endl;
		cout << "姓名：" << abs->personArray[ret].m_Name<<"\t";
		cout << "年龄：" << abs->personArray[ret].m_Age <<"\t";
		cout << "性别：" << abs->personArray[ret].m_Sex <<"\t";
		cout << "电话：" << abs->personArray[ret].m_Phone <<"\t";
		cout << "住址：" << abs->personArray[ret].m_Address <<endl;
	}
	else{
		cout << "没有找到！" << endl;
	}
	system("pause");
	system("cls");
}

//5、修改指定的联系人
void modifuPerson(Addressbooks *abs){
	cout << "请输入要修改的联系人：" << endl;
	string name;
	cin >> name;
	int ret = isExist(abs,name);
	if (ret != -1){
		//姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[ret].m_Name = name;
		//性别
		cout << "请输入性别：" << endl;
		cout << "1->男，2—>女" << endl;
		int sex = 0;
		cin >> sex;
		while (true)
		{
		if (sex == 1 || sex == 2){
			abs->personArray[ret].m_Sex = sex;
			break;
		}
			cout << "输错了！" << endl;
		}
		//年龄
		cout << "请输入年龄" << endl;
		int age=0;
		cin >> age;
		abs->personArray[ret].m_Age = age;
		//电话
		cout << "请输入电话" << endl;
		string phone;
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;
		//住址
		cout << "请输入地址" << endl;
		string address;
		cin >> address;
		abs->personArray[ret].m_Address = address;

		cout << "修改成功！" << endl;
	}
	else{
		cout << "查无此人！" << endl;
	}
	system("pause");
	system("cls");
}
//6、清空联系人：
void cleanPerson(Addressbooks *abs){
	cout << "是否要清空联系人：" << endl;
	cout << "1->否；2->是" << endl;
	int s = 0;
	cin >> s;
	if (s == 2){
	abs->m_Size = 0;
	cout << "已清空全部联系人" << endl;
	}
	else if (s==1){
		cout << "无操作" << endl;
	}
	else {
		cout << "您输错了！" << endl;
	}
	system("pause");
	system("cls");
}

//菜单界面
void showMenu()
{
	cout << "*************************" << endl;
	cout << "***** 1、添加联系人 *****" << endl;
	cout << "***** 2、显示联系人 *****" << endl;
	cout << "***** 3、删除联系人 *****" << endl;
	cout << "***** 4、查找联系人 *****" << endl;
	cout << "***** 5、修改联系人 *****" << endl;
	cout << "***** 6、清空联系人 *****" << endl;
	cout << "***** 0、退出通讯录 *****" << endl;
	cout << "*************************" << endl;
}

int main(){
	//创建一个通讯录结构体变量
	Addressbooks abs;
	//初始化通讯录中当+人员个数
	abs.m_Size = 0;

	int select = 0;//创建用户选择输入的变量；
	while (true){

	
	//菜单的调用：
	showMenu();


	cin >>select;
	switch (select){
	case 1://添加联系人
		addPerson(&abs);//利用地址传递可以修改实参；
		break;
	case 2://显示联系人
		showPerson(&abs);
		break;
	case 3://删除联系人
	//cout << "请输入删除联系人的姓名" << endl;
	//string name;
	//cin >> name;
	//if (isExist(&abs, name) == -1){
	//	cout << "查无此人" << endl;
	//}
	//else{
	//	cout << "找到此人" << endl;
	//}
	//}
		deletePerson(&abs);
	break; 
	case 4://查找联系人
		findPerson(&abs);
		break;
	case 5://修改联系人
		modifuPerson(&abs);
		break;
	case 6://清空联系人
		cleanPerson(&abs);
		break;
	case 0://退出通讯录
		cout << "欢迎下次使用！"<<endl;

		system("pause");
		break;
	}
}
	system("pause");
	return 0;
}
